// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Task {
  id          String   @id @default(uuid())
  description String
  createdBy   User?    @relation(name: "CreatedBy", fields: [authorId], references: [id]) // Campo virtual
  developer   User?    @relation(name: "Developer", fields: [developerId], references: [id])
  tester      User?    @relation(name: "Tester", fields: [testerId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime
  authorId    String   @map("author_id")
  developerId String   @map("developer_id")
  testerId    String   @map("tester_id")
  time        Float    @default(0)

  @@map("tasks")
}

model User {
  id             String        @id @default(uuid())
  name           String
  username       String        @unique
  password       String
  userType       UserType      @default(NORMAL)
  refreshToken   RefreshToken?
  tasksCreatedBy Task[]        @relation(name: "CreatedBy")
  tasksDeveloped Task[]        @relation(name: "Developer")
  tasksTested    Task[]        @relation(name: "Tester")

  @@map("users")
}

model RefreshToken {
  id        String @id @default(uuid())
  expiresIn Int
  user      User   @relation(fields: [userId], references: [id])
  userId    String @unique

  @@map("refresh_tokens")
}

enum UserType {
  ADMIN
  TESTER
  DEVELOPER
  NORMAL
}
